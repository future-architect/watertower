// Code generated by go-swagger; DO NOT EDIT.

package restapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "title": "watertower",
    "version": "1.0"
  },
  "host": "localhost:3000",
  "paths": {
    "/{index}/_doc/": {
      "post": {
        "description": "Adds a JSON document to the specified index and makes it searchable.",
        "operationId": "post-index-_doc",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Document"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ModifyResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "type": "string",
          "description": "Name of the target index.",
          "name": "index",
          "in": "path",
          "required": true
        }
      ]
    },
    "/{index}/_doc/{_id}": {
      "get": {
        "description": "You use GET to retrieve a document and its source or stored fields from a particular index.",
        "summary": "Your GET endpoint",
        "operationId": "get-index-_doc-_id",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string"
                },
                "_index": {
                  "type": "string"
                },
                "_primary_term": {
                  "type": "integer"
                },
                "_seq_no": {
                  "type": "integer"
                },
                "_source": {
                  "$ref": "#/definitions/Document"
                },
                "_type": {
                  "type": "string"
                },
                "_version": {
                  "type": "integer"
                },
                "found": {
                  "type": "boolean"
                }
              }
            },
            "examples": {
              "get response": {
                "_id": "0",
                "_index": "twitter",
                "_primary_term": 1,
                "_seq_no": 10,
                "_source": {
                  "date": "2009-11-15T14:12:12",
                  "likes": 0,
                  "message": "trying out Elasticsearch",
                  "user": "kimchy"
                },
                "_type": "_doc",
                "_version": 1,
                "found": true
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string"
                },
                "_index": {
                  "type": "string"
                },
                "_primary_term": {
                  "type": "integer"
                },
                "_seq_no": {
                  "type": "integer"
                },
                "_source": {
                  "type": "null"
                },
                "_type": {
                  "type": "string"
                },
                "_version": {
                  "type": "integer"
                },
                "found": {
                  "type": "boolean"
                },
                "message": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "put": {
        "description": "Update an existing JSON document to the specified index and makes it searchable.",
        "operationId": "put-index-_doc-_id",
        "parameters": [
          {
            "x-examples": {
              "sample document": {
                "content": "This code is sent in response to an Upgrade request header from the client, and indicates the protocol the server is switching to.",
                "lang": "en",
                "tags": [
                  "101"
                ],
                "title": "101 Switching Protocol"
              }
            },
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Document"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ModifyResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "delete": {
        "description": "You use DELETE to remove a document from an index. You must specify the index name and document ID.",
        "operationId": "delete-index-_doc-_id",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ModifyResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "type": "string",
          "description": "Name of the index that contains the document.",
          "name": "index",
          "in": "path",
          "required": true
        },
        {
          "type": "string",
          "description": "Unique identifier of the document.",
          "name": "_id",
          "in": "path",
          "required": true
        }
      ]
    },
    "/{index}/_search": {
      "get": {
        "summary": "Your GET endpoint",
        "operationId": "get-index-_search",
        "parameters": [
          {
            "x-examples": {
              "full text and tags": {
                "query": {
                  "match": {
                    "content": {
                      "query": "this is a test"
                    }
                  },
                  "terms": {
                    "tags": [
                      "white",
                      "red"
                    ]
                  }
                }
              },
              "full text search": {
                "query": {
                  "match": {
                    "content": {
                      "query": "this is a test"
                    }
                  }
                }
              },
              "tag query": {
                "query": {
                  "terms": {
                    "tags": [
                      "white",
                      "red"
                    ]
                  }
                }
              }
            },
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "required": [
                "query"
              ],
              "properties": {
                "query": {
                  "type": "object",
                  "required": [
                    "bool"
                  ],
                  "properties": {
                    "bool": {
                      "type": "object",
                      "properties": {
                        "filter": {
                          "type": "object",
                          "required": [
                            "terms"
                          ],
                          "properties": {
                            "terms": {
                              "type": "object",
                              "required": [
                                "tags"
                              ],
                              "properties": {
                                "tags": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          }
                        },
                        "must": {
                          "type": "object",
                          "required": [
                            "match_phrase"
                          ],
                          "properties": {
                            "match_phrase": {
                              "type": "object",
                              "required": [
                                "content"
                              ],
                              "properties": {
                                "content": {
                                  "type": "object",
                                  "required": [
                                    "query"
                                  ],
                                  "properties": {
                                    "analyzer": {
                                      "type": "string"
                                    },
                                    "query": {
                                      "type": "string"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          {
            "type": "string",
            "description": "Search by unique_key",
            "name": "q",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "_shards": {
                  "type": "object",
                  "properties": {
                    "failed": {
                      "type": "integer"
                    },
                    "skipped": {
                      "type": "integer"
                    },
                    "successful": {
                      "type": "integer"
                    },
                    "total": {
                      "type": "integer"
                    }
                  }
                },
                "hits": {
                  "type": "object",
                  "properties": {
                    "hits": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "_id": {
                            "type": "string"
                          },
                          "_index": {
                            "type": "string"
                          },
                          "_score": {
                            "type": [
                              "null",
                              "number"
                            ]
                          },
                          "_source": {
                            "$ref": "#/definitions/Document"
                          },
                          "_type": {
                            "type": "string"
                          },
                          "sort": {
                            "type": "array",
                            "items": {
                              "type": "integer"
                            }
                          }
                        }
                      }
                    },
                    "max_score": {
                      "type": [
                        "null",
                        "number"
                      ]
                    },
                    "total": {
                      "type": "object",
                      "properties": {
                        "relation": {
                          "type": "string"
                        },
                        "total": {
                          "type": "integer"
                        }
                      }
                    }
                  }
                },
                "timed_out": {
                  "type": "boolean"
                },
                "took": {
                  "type": "integer"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "type": "string",
          "description": "Name of the index that contains the document.",
          "name": "index",
          "in": "path",
          "required": true
        }
      ]
    },
    "/{index}/_source/{_id}": {
      "get": {
        "description": "You use GET to retrieve just the document from a particular index.",
        "summary": "Your GET endpoint",
        "operationId": "get-index-_source-_id",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Document"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "type": "string",
          "description": "Name of the index that contains the document.",
          "name": "index",
          "in": "path",
          "required": true
        },
        {
          "type": "string",
          "description": "Unique identifier of the document.",
          "name": "_id",
          "in": "path",
          "required": true
        }
      ]
    }
  },
  "definitions": {
    "Document": {
      "type": "object",
      "title": "Document",
      "properties": {
        "content": {
          "type": "string"
        },
        "lang": {
          "type": "string"
        },
        "metadata": {
          "type": "object"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "title": {
          "type": "string"
        },
        "unique_key": {
          "type": "string"
        }
      }
    },
    "ModifyResponse": {
      "type": "object",
      "title": "ModifyResponse",
      "properties": {
        "_id": {
          "type": "string"
        },
        "_index": {
          "type": "string"
        },
        "_primary_term": {
          "type": "integer"
        },
        "_seq_no": {
          "type": "integer"
        },
        "_shards": {
          "type": "object",
          "properties": {
            "failed": {
              "type": "integer"
            },
            "successful": {
              "type": "integer"
            },
            "total": {
              "type": "integer"
            }
          }
        },
        "_type": {
          "type": "string"
        },
        "_version": {
          "type": "integer"
        },
        "result": {
          "type": "string"
        }
      },
      "x-examples": {
        "delete sample": {
          "_id": "1",
          "_index": "twitter",
          "_primary_term": 1,
          "_seq_no": 5,
          "_shards": {
            "failed": 0,
            "successful": 2,
            "total": 2
          },
          "_type": "_doc",
          "_version": 2,
          "result": "deleted"
        }
      }
    }
  }
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "title": "watertower",
    "version": "1.0"
  },
  "host": "localhost:3000",
  "paths": {
    "/{index}/_doc/": {
      "post": {
        "description": "Adds a JSON document to the specified index and makes it searchable.",
        "operationId": "post-index-_doc",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Document"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ModifyResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "type": "string",
          "description": "Name of the target index.",
          "name": "index",
          "in": "path",
          "required": true
        }
      ]
    },
    "/{index}/_doc/{_id}": {
      "get": {
        "description": "You use GET to retrieve a document and its source or stored fields from a particular index.",
        "summary": "Your GET endpoint",
        "operationId": "get-index-_doc-_id",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string"
                },
                "_index": {
                  "type": "string"
                },
                "_primary_term": {
                  "type": "integer"
                },
                "_seq_no": {
                  "type": "integer"
                },
                "_source": {
                  "$ref": "#/definitions/Document"
                },
                "_type": {
                  "type": "string"
                },
                "_version": {
                  "type": "integer"
                },
                "found": {
                  "type": "boolean"
                }
              }
            },
            "examples": {
              "get response": {
                "_id": "0",
                "_index": "twitter",
                "_primary_term": 1,
                "_seq_no": 10,
                "_source": {
                  "date": "2009-11-15T14:12:12",
                  "likes": 0,
                  "message": "trying out Elasticsearch",
                  "user": "kimchy"
                },
                "_type": "_doc",
                "_version": 1,
                "found": true
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string"
                },
                "_index": {
                  "type": "string"
                },
                "_primary_term": {
                  "type": "integer"
                },
                "_seq_no": {
                  "type": "integer"
                },
                "_source": {
                  "type": "null"
                },
                "_type": {
                  "type": "string"
                },
                "_version": {
                  "type": "integer"
                },
                "found": {
                  "type": "boolean"
                },
                "message": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "put": {
        "description": "Update an existing JSON document to the specified index and makes it searchable.",
        "operationId": "put-index-_doc-_id",
        "parameters": [
          {
            "x-examples": {
              "sample document": {
                "content": "This code is sent in response to an Upgrade request header from the client, and indicates the protocol the server is switching to.",
                "lang": "en",
                "tags": [
                  "101"
                ],
                "title": "101 Switching Protocol"
              }
            },
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Document"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ModifyResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "delete": {
        "description": "You use DELETE to remove a document from an index. You must specify the index name and document ID.",
        "operationId": "delete-index-_doc-_id",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ModifyResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "type": "string",
          "description": "Name of the index that contains the document.",
          "name": "index",
          "in": "path",
          "required": true
        },
        {
          "type": "string",
          "description": "Unique identifier of the document.",
          "name": "_id",
          "in": "path",
          "required": true
        }
      ]
    },
    "/{index}/_search": {
      "get": {
        "summary": "Your GET endpoint",
        "operationId": "get-index-_search",
        "parameters": [
          {
            "x-examples": {
              "full text and tags": {
                "query": {
                  "match": {
                    "content": {
                      "query": "this is a test"
                    }
                  },
                  "terms": {
                    "tags": [
                      "white",
                      "red"
                    ]
                  }
                }
              },
              "full text search": {
                "query": {
                  "match": {
                    "content": {
                      "query": "this is a test"
                    }
                  }
                }
              },
              "tag query": {
                "query": {
                  "terms": {
                    "tags": [
                      "white",
                      "red"
                    ]
                  }
                }
              }
            },
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "required": [
                "query"
              ],
              "properties": {
                "query": {
                  "type": "object",
                  "required": [
                    "bool"
                  ],
                  "properties": {
                    "bool": {
                      "type": "object",
                      "properties": {
                        "filter": {
                          "type": "object",
                          "required": [
                            "terms"
                          ],
                          "properties": {
                            "terms": {
                              "type": "object",
                              "required": [
                                "tags"
                              ],
                              "properties": {
                                "tags": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          }
                        },
                        "must": {
                          "type": "object",
                          "required": [
                            "match_phrase"
                          ],
                          "properties": {
                            "match_phrase": {
                              "type": "object",
                              "required": [
                                "content"
                              ],
                              "properties": {
                                "content": {
                                  "type": "object",
                                  "required": [
                                    "query"
                                  ],
                                  "properties": {
                                    "analyzer": {
                                      "type": "string"
                                    },
                                    "query": {
                                      "type": "string"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          {
            "type": "string",
            "description": "Search by unique_key",
            "name": "q",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "_shards": {
                  "type": "object",
                  "properties": {
                    "failed": {
                      "type": "integer"
                    },
                    "skipped": {
                      "type": "integer"
                    },
                    "successful": {
                      "type": "integer"
                    },
                    "total": {
                      "type": "integer"
                    }
                  }
                },
                "hits": {
                  "type": "object",
                  "properties": {
                    "hits": {
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/GetIndexSearchOKBodyHitsHitsItems0"
                      }
                    },
                    "max_score": {
                      "type": [
                        "null",
                        "number"
                      ]
                    },
                    "total": {
                      "type": "object",
                      "properties": {
                        "relation": {
                          "type": "string"
                        },
                        "total": {
                          "type": "integer"
                        }
                      }
                    }
                  }
                },
                "timed_out": {
                  "type": "boolean"
                },
                "took": {
                  "type": "integer"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "type": "string",
          "description": "Name of the index that contains the document.",
          "name": "index",
          "in": "path",
          "required": true
        }
      ]
    },
    "/{index}/_source/{_id}": {
      "get": {
        "description": "You use GET to retrieve just the document from a particular index.",
        "summary": "Your GET endpoint",
        "operationId": "get-index-_source-_id",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Document"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "type": "string",
          "description": "Name of the index that contains the document.",
          "name": "index",
          "in": "path",
          "required": true
        },
        {
          "type": "string",
          "description": "Unique identifier of the document.",
          "name": "_id",
          "in": "path",
          "required": true
        }
      ]
    }
  },
  "definitions": {
    "Document": {
      "type": "object",
      "title": "Document",
      "properties": {
        "content": {
          "type": "string"
        },
        "lang": {
          "type": "string"
        },
        "metadata": {
          "type": "object"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "title": {
          "type": "string"
        },
        "unique_key": {
          "type": "string"
        }
      }
    },
    "GetIndexSearchOKBodyHits": {
      "type": "object",
      "properties": {
        "hits": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GetIndexSearchOKBodyHitsHitsItems0"
          }
        },
        "max_score": {
          "type": [
            "null",
            "number"
          ]
        },
        "total": {
          "type": "object",
          "properties": {
            "relation": {
              "type": "string"
            },
            "total": {
              "type": "integer"
            }
          }
        }
      }
    },
    "GetIndexSearchOKBodyHitsHitsItems0": {
      "type": "object",
      "properties": {
        "_id": {
          "type": "string"
        },
        "_index": {
          "type": "string"
        },
        "_score": {
          "type": [
            "null",
            "number"
          ]
        },
        "_source": {
          "$ref": "#/definitions/Document"
        },
        "_type": {
          "type": "string"
        },
        "sort": {
          "type": "array",
          "items": {
            "type": "integer"
          }
        }
      }
    },
    "GetIndexSearchOKBodyHitsTotal": {
      "type": "object",
      "properties": {
        "relation": {
          "type": "string"
        },
        "total": {
          "type": "integer"
        }
      }
    },
    "GetIndexSearchOKBodyShards": {
      "type": "object",
      "properties": {
        "failed": {
          "type": "integer"
        },
        "skipped": {
          "type": "integer"
        },
        "successful": {
          "type": "integer"
        },
        "total": {
          "type": "integer"
        }
      }
    },
    "GetIndexSearchParamsBodyQuery": {
      "type": "object",
      "required": [
        "bool"
      ],
      "properties": {
        "bool": {
          "type": "object",
          "properties": {
            "filter": {
              "type": "object",
              "required": [
                "terms"
              ],
              "properties": {
                "terms": {
                  "type": "object",
                  "required": [
                    "tags"
                  ],
                  "properties": {
                    "tags": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            "must": {
              "type": "object",
              "required": [
                "match_phrase"
              ],
              "properties": {
                "match_phrase": {
                  "type": "object",
                  "required": [
                    "content"
                  ],
                  "properties": {
                    "content": {
                      "type": "object",
                      "required": [
                        "query"
                      ],
                      "properties": {
                        "analyzer": {
                          "type": "string"
                        },
                        "query": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "GetIndexSearchParamsBodyQueryBool": {
      "type": "object",
      "properties": {
        "filter": {
          "type": "object",
          "required": [
            "terms"
          ],
          "properties": {
            "terms": {
              "type": "object",
              "required": [
                "tags"
              ],
              "properties": {
                "tags": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "must": {
          "type": "object",
          "required": [
            "match_phrase"
          ],
          "properties": {
            "match_phrase": {
              "type": "object",
              "required": [
                "content"
              ],
              "properties": {
                "content": {
                  "type": "object",
                  "required": [
                    "query"
                  ],
                  "properties": {
                    "analyzer": {
                      "type": "string"
                    },
                    "query": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "GetIndexSearchParamsBodyQueryBoolFilter": {
      "type": "object",
      "required": [
        "terms"
      ],
      "properties": {
        "terms": {
          "type": "object",
          "required": [
            "tags"
          ],
          "properties": {
            "tags": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "GetIndexSearchParamsBodyQueryBoolFilterTerms": {
      "type": "object",
      "required": [
        "tags"
      ],
      "properties": {
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "GetIndexSearchParamsBodyQueryBoolMust": {
      "type": "object",
      "required": [
        "match_phrase"
      ],
      "properties": {
        "match_phrase": {
          "type": "object",
          "required": [
            "content"
          ],
          "properties": {
            "content": {
              "type": "object",
              "required": [
                "query"
              ],
              "properties": {
                "analyzer": {
                  "type": "string"
                },
                "query": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "GetIndexSearchParamsBodyQueryBoolMustMatchPhrase": {
      "type": "object",
      "required": [
        "content"
      ],
      "properties": {
        "content": {
          "type": "object",
          "required": [
            "query"
          ],
          "properties": {
            "analyzer": {
              "type": "string"
            },
            "query": {
              "type": "string"
            }
          }
        }
      }
    },
    "GetIndexSearchParamsBodyQueryBoolMustMatchPhraseContent": {
      "type": "object",
      "required": [
        "query"
      ],
      "properties": {
        "analyzer": {
          "type": "string"
        },
        "query": {
          "type": "string"
        }
      }
    },
    "ModifyResponse": {
      "type": "object",
      "title": "ModifyResponse",
      "properties": {
        "_id": {
          "type": "string"
        },
        "_index": {
          "type": "string"
        },
        "_primary_term": {
          "type": "integer"
        },
        "_seq_no": {
          "type": "integer"
        },
        "_shards": {
          "type": "object",
          "properties": {
            "failed": {
              "type": "integer"
            },
            "successful": {
              "type": "integer"
            },
            "total": {
              "type": "integer"
            }
          }
        },
        "_type": {
          "type": "string"
        },
        "_version": {
          "type": "integer"
        },
        "result": {
          "type": "string"
        }
      },
      "x-examples": {
        "delete sample": {
          "_id": "1",
          "_index": "twitter",
          "_primary_term": 1,
          "_seq_no": 5,
          "_shards": {
            "failed": 0,
            "successful": 2,
            "total": 2
          },
          "_type": "_doc",
          "_version": 2,
          "result": "deleted"
        }
      }
    },
    "ModifyResponseShards": {
      "type": "object",
      "properties": {
        "failed": {
          "type": "integer"
        },
        "successful": {
          "type": "integer"
        },
        "total": {
          "type": "integer"
        }
      }
    }
  }
}`))
}

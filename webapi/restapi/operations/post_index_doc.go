// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// PostIndexDocHandlerFunc turns a function with the right signature into a post index doc handler
type PostIndexDocHandlerFunc func(PostIndexDocParams) middleware.Responder

// Handle executing the request and returning a response
func (fn PostIndexDocHandlerFunc) Handle(params PostIndexDocParams) middleware.Responder {
	return fn(params)
}

// PostIndexDocHandler interface for that can handle valid post index doc params
type PostIndexDocHandler interface {
	Handle(PostIndexDocParams) middleware.Responder
}

// NewPostIndexDoc creates a new http.Handler for the post index doc operation
func NewPostIndexDoc(ctx *middleware.Context, handler PostIndexDocHandler) *PostIndexDoc {
	return &PostIndexDoc{Context: ctx, Handler: handler}
}

/*PostIndexDoc swagger:route POST /{index}/_doc/ postIndexDoc

Adds a JSON document to the specified index and makes it searchable.

*/
type PostIndexDoc struct {
	Context *middleware.Context
	Handler PostIndexDocHandler
}

func (o *PostIndexDoc) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewPostIndexDocParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}

// PostIndexDocInternalServerErrorBody post index doc internal server error body
//
// swagger:model PostIndexDocInternalServerErrorBody
type PostIndexDocInternalServerErrorBody struct {

	// message
	Message string `json:"message,omitempty"`
}

// Validate validates this post index doc internal server error body
func (o *PostIndexDocInternalServerErrorBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PostIndexDocInternalServerErrorBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostIndexDocInternalServerErrorBody) UnmarshalBinary(b []byte) error {
	var res PostIndexDocInternalServerErrorBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

// PostIndexDocNotFoundBody post index doc not found body
//
// swagger:model PostIndexDocNotFoundBody
type PostIndexDocNotFoundBody struct {

	// message
	Message string `json:"message,omitempty"`
}

// Validate validates this post index doc not found body
func (o *PostIndexDocNotFoundBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PostIndexDocNotFoundBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostIndexDocNotFoundBody) UnmarshalBinary(b []byte) error {
	var res PostIndexDocNotFoundBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
